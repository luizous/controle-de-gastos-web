// <auto-generated />
using System;
using ControleDeGastos.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleDeGastos.Repository.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191120023719_CriarBanco")]
    partial class CriarBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleDeGastos.Domain.Cartao", b =>
                {
                    b.Property<int>("IdCartao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("Banco");

                    b.Property<string>("Conta");

                    b.Property<string>("Cvv");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime>("DataValidade");

                    b.Property<int>("DiaVencimento");

                    b.Property<string>("NomeSobrenome");

                    b.Property<string>("Numero");

                    b.Property<string>("Tipo");

                    b.Property<int?>("UsuarioIdUsuario");

                    b.HasKey("IdCartao");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Titulo");

                    b.Property<int?>("UsuarioIdUsuario");

                    b.HasKey("IdCategoria");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Lancamento", b =>
                {
                    b.Property<int>("IdLancamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartaoIdCartao");

                    b.Property<int?>("CategoriaIdCategoria");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime>("DataLancamento");

                    b.Property<string>("Descricao");

                    b.Property<int>("Parcelas");

                    b.Property<int?>("UsuarioIdUsuario");

                    b.Property<double>("Valor");

                    b.HasKey("IdLancamento");

                    b.HasIndex("CartaoIdCartao");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Recebimento", b =>
                {
                    b.Property<int>("IdRecebimento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime>("DataRecebimento");

                    b.Property<string>("Descricao");

                    b.Property<string>("Fornecedor");

                    b.Property<int?>("UsuarioIdUsuario");

                    b.Property<double>("Valor");

                    b.HasKey("IdRecebimento");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Recebimento");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<double>("Salario");

                    b.Property<string>("Senha");

                    b.Property<string>("Sobrenome");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Cartao", b =>
                {
                    b.HasOne("ControleDeGastos.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Categoria", b =>
                {
                    b.HasOne("ControleDeGastos.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Lancamento", b =>
                {
                    b.HasOne("ControleDeGastos.Domain.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoIdCartao");

                    b.HasOne("ControleDeGastos.Domain.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria");

                    b.HasOne("ControleDeGastos.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("ControleDeGastos.Domain.Recebimento", b =>
                {
                    b.HasOne("ControleDeGastos.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
